{"version":3,"sources":["components/Box.js","solve/utils.js","components/Grid.js","solve/DLX.js","components/Alert.js","components/App.js","serviceWorker.js","index.js"],"names":["useFocus","htmlElRef","useRef","current","focus","Box","onKeyDown","onChange","value","conflict","setFocusedBox","inputRef","setInputFocus","useState","height","setHeight","tdRef","useEffect","clientHeight","ref","className","autoComplete","pattern","type","onClick","style","fontSize","make2DFull","arr","i","push","j","make2DEmpty","width","sort","concat","removeDuplicates","array","filter","a","b","indexOf","checkConflicts","grid","conflicts","map","temp","checkRows","Array","checkCollumns","m","n","checkSquares","from","Set","JSON","stringify","parse","handleKeys","e","currentBoxX","currentBoxY","move","x","y","preventDefault","focusRow","focusColumn","which","shiftKey","target","Grid","grid2D","setGrid2D","focusedBox","setConflicts","rows","row","key","slice","updateGrid","includes","displayGrid","Node","AlgorithmX","cols","getRight","getLeft","getUp","getDown","this","header","nodeMatrix","makeDonut","solution","uniqueSolutions","nodeCnt","bitMatrix","column","rowID","colID","left","right","up","down","colNode","rowNode","rightNode","leftNode","h","minCol","getNodeFromRow","cover","choose","parseInt","length","getMinColumn","search","pop","uncover","algoX","solve","arrayToSolve","error","success","arrayToCheck","isClean","chooseGiven","toString","getSolutionGrid","Alert","alertMessage","AlertType","verticalAlign","minWidth","Modal","setAppElement","App","tip","isMobile","setAlertMessage","HelpOutline","setAlertType","React","modalIsOpen","setIsOpen","id","Error","href","Info","isOpen","onRequestClose","contentLabel","textAlign","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.1dcc179e.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nfunction Box({ focus, onKeyDown, onChange, value, conflict, setFocusedBox }) {\n  const [inputRef, setInputFocus] = useFocus();\n  const [height, setHeight] = useState(0);\n  const tdRef = useRef(null);\n\n  useEffect(() => {\n    if (focus) {\n      setInputFocus();\n    }\n  }, [focus, setInputFocus]);\n\n  useEffect(() => {\n    setHeight(tdRef.current.clientHeight);\n  }, [setHeight]);\n\n  return (\n    <td ref={tdRef}>\n      <input\n        ref={inputRef}\n        className={conflict ? \"problem-child\" : \"behaved-child\"}\n        autoComplete=\"new-password\"\n        pattern=\"\\d\"\n        type=\"number\"\n        onKeyDown={onKeyDown}\n        onChange={onChange}\n        value={value}\n        onClick={setFocusedBox}\n        style={{ fontSize: height / 1.6 }}\n      />\n    </td>\n  );\n}\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null);\n  const setFocus = () => {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n  return [htmlElRef, setFocus];\n};\n\nexport default Box;\n","export function make2DFull(value) {\n  let arr = [];\n  for (let i = 0; i < 9; i++) {\n    arr.push([]);\n    for (let j = 0; j < 9; j++) {\n      arr[i].push(value);\n    }\n  }\n  return arr;\n}\n\nexport function make2DEmpty(width) {\n  let arr = [];\n  for (let i = 0; i < width; i++) arr[i] = [];\n  return arr;\n}\n\nfunction sort(arr) {\n  return arr.concat().sort();\n}\n\nfunction removeDuplicates(array) {\n  return array.filter((a, b) => array.indexOf(a) === b);\n}\n\nexport function checkConflicts(grid) {\n  let conflicts = checkRows(grid).concat(\n    checkCollumns(grid).concat(checkSquares(grid))\n  );\n  return Array.from(new Set(conflicts.map(JSON.stringify)), JSON.parse);\n}\n\nfunction checkRows(grid) {\n  let conflicts = [];\n  for (let i = 0; i < 9; i++) {\n    let map = {};\n    for (let j = 0; j < 9; j++) {\n      if (grid[i][j] in map) {\n        map[grid[i][j]].push([i, j]);\n      } else if (grid[i][j]) {\n        map[grid[i][j]] = [[i, j]];\n      }\n    }\n    let temp = sort(grid[i]);\n    for (let j = 0; j < 8; j++) {\n      if (temp[j] === temp[j + 1] && temp[j]) {\n        conflicts = conflicts.concat(map[temp[j]]);\n      }\n    }\n  }\n  return removeDuplicates(conflicts);\n}\n\nfunction checkCollumns(grid) {\n  let conflicts = [];\n  for (let j = 0; j < 9; j++) {\n    let map = {};\n    let temp = new Array(9);\n    for (let i = 0; i < 9; i++) {\n      temp.push(grid[i][j]);\n      if (grid[i][j] in map) {\n        map[grid[i][j]].push([i, j]);\n      } else if (grid[i][j]) {\n        map[grid[i][j]] = [[i, j]];\n      }\n    }\n    temp = sort(temp);\n    for (let i = 0; i < 8; i++) {\n      if (temp[i] === temp[i + 1] && temp[i]) {\n        conflicts = conflicts.concat(map[temp[i]]);\n      }\n    }\n  }\n  return removeDuplicates(conflicts);\n}\n\nfunction checkSquares(grid) {\n  let conflicts = [];\n  for (let i = 0; i < 9; i = i + 3) {\n    for (let j = 0; j < 9; j = j + 3) {\n      let map = {};\n      let temp = new Array(9);\n      for (let m = 0; m < 3; m++) {\n        for (let n = 0; n < 3; n++) {\n          temp.push(grid[i + m][j + n]);\n          if (grid[i + m][j + n] in map) {\n            map[grid[i + m][j + n]].push([i + m, j + n]);\n          } else if (grid[i + m][j + n]) {\n            map[grid[i + m][j + n]] = [[i + m, j + n]];\n          }\n        }\n      }\n      temp = sort(temp);\n      for (let i = 0; i < 8; i++) {\n        if (temp[i] === temp[i + 1] && temp[i]) {\n          conflicts = conflicts.concat(map[temp[i]]);\n        }\n      }\n    }\n  }\n  return removeDuplicates(conflicts);\n}\n","import React from \"react\";\nimport Box from \"./Box.js\";\nimport { checkConflicts } from \"../solve/utils.js\";\n\nfunction Grid({\n  grid2D,\n  setGrid2D,\n  focusedBox,\n  setFocusedBox,\n  conflicts,\n  setConflicts,\n}) {\n  return (\n    <table>\n      <tbody>\n        {displayGrid(\n          focusedBox,\n          setFocusedBox,\n          grid2D,\n          setGrid2D,\n          conflicts,\n          setConflicts\n        )}\n      </tbody>\n    </table>\n  );\n}\n\nfunction displayGrid(\n  { focusRow, focusColumn },\n  setFocusedBox,\n  grid2D,\n  setGrid2D,\n  conflicts,\n  setConflicts\n) {\n  let rows = [];\n  for (let i = 0; i < 9; i++) {\n    let row = [];\n    for (let j = 0; j < 9; j++) {\n      const focus = focusRow === i && focusColumn === j;\n      row.push(\n        <Box\n          key={i + \"\" + j}\n          focus={focus}\n          onKeyDown={(e) => handleKeys(e, i, j, setFocusedBox)}\n          onChange={(e) =>\n            updateGrid(e, i, j, grid2D, setGrid2D, conflicts, setConflicts)\n          }\n          value={grid2D[i][j]}\n          conflict={JSON.stringify(conflicts).includes(JSON.stringify([i, j]))}\n          setFocusedBox={() =>\n            setFocusedBox({\n              focusRow: i,\n              focusColumn: j,\n            })\n          }\n        />\n      );\n    }\n    rows.push(<tr key={i}>{row}</tr>);\n  }\n  return rows;\n}\n\nfunction updateGrid(\n  e,\n  currentBoxX,\n  currentBoxY,\n  grid2D,\n  setGrid2D,\n  conflicts,\n  setConflicts\n) {\n  grid2D[currentBoxX][currentBoxY] = e.target.value;\n  setGrid2D(grid2D.slice());\n  setConflicts(checkConflicts(grid2D));\n}\n\nconst handleKeys = (e, currentBoxX, currentBoxY, setFocusedBox) => {\n  const move = (x, y) => {\n    e.preventDefault();\n    setFocusedBox({\n      focusRow: currentBoxX + x,\n      focusColumn: currentBoxY + y,\n    });\n  };\n\n  if (e.which === 39) {\n    // Right Arrow\n    move(0, 1);\n  } else if (e.which === 37) {\n    // Left Arrow\n    move(0, -1);\n  } else if (e.which === 38) {\n    // Up Arrow\n    move(-1, 0);\n  } else if (e.which === 40) {\n    // Down Arrow\n    move(1, 0);\n  } else if ((e.which === 9 && !e.shiftKey) || e.which === 13) {\n    // Tab (go right)\n    if (currentBoxY === 8) {\n      move(1, -8);\n    } else {\n      move(0, 1);\n    }\n  } else if (e.which === 9 && e.shiftKey) {\n    // Shift + Tab (go left)\n    if (currentBoxY === 0) {\n      move(-1, 8);\n    } else {\n      move(0, -1);\n    }\n  } else if (\n    e.which === 96 ||\n    e.which === 46 ||\n    e.which === 48 ||\n    e.which === 69 ||\n    e.which === 107 ||\n    e.which === 109 ||\n    e.which === 110 ||\n    e.which === 187 ||\n    e.which === 189 ||\n    e.which === 190\n  ) {\n    // Block \"0\"\n    e.preventDefault();\n  } else if (e.which !== 8) {\n    // Clear input otherwise if not backspace\n    // as to guarantee change.\n    e.target.value = \"\";\n  }\n};\n\nexport default Grid;\n","import bitMatrix from \"./bitmatrix.json\";\nimport { make2DEmpty } from \"./utils.js\";\n\nclass Node {}\n\nclass AlgorithmX {\n  rows = 729;\n  cols = 324;\n\n  constructor() {\n    this.header = new Node();\n    this.nodeMatrix = make2DEmpty(this.rows + 1);\n    for (let i = 0; i <= this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        this.nodeMatrix[i][j] = new Node();\n      }\n    }\n    this.makeDonut();\n    this.solution = [];\n    this.uniqueSolutions = [];\n  }\n\n  getRight = (i) => (i + 1) % this.cols;\n  getLeft = (i) => (i - 1 < 0 ? this.cols - 1 : i - 1);\n  getUp = (i) => (i - 1 < 0 ? this.rows : i - 1);\n  getDown = (i) => (i + 1) % (this.rows + 1);\n\n  // Builds circular doubly linked list\n  makeDonut() {\n    let a, b;\n    // Extra row for headers\n    for (let i = 0; i <= this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (!i) this.nodeMatrix[0][j].nodeCnt = 0;\n\n        // 1 corresponds with node\n        if (bitMatrix[i][j] || !i) {\n          // Increment nodeCnt if not a header node\n          if (i) this.nodeMatrix[0][j].nodeCnt++;\n\n          this.nodeMatrix[i][j].column = this.nodeMatrix[0][j];\n          this.nodeMatrix[i][j].rowID = i;\n          this.nodeMatrix[i][j].colID = j;\n\n          // Link nodes\n          a = i;\n          b = j;\n          do {\n            b = this.getLeft(b);\n          } while (!bitMatrix[a][b] && i && b !== j);\n          this.nodeMatrix[i][j].left = this.nodeMatrix[i][b];\n\n          b = j;\n          do {\n            b = this.getRight(b);\n          } while (!bitMatrix[a][b] && i && b !== j);\n          this.nodeMatrix[i][j].right = this.nodeMatrix[i][b];\n\n          b = j;\n          do {\n            a = this.getUp(a);\n          } while (!bitMatrix[a][b] && a && a !== i);\n          this.nodeMatrix[i][j].up = this.nodeMatrix[a][j];\n\n          a = i;\n          do {\n            a = this.getDown(a);\n          } while (!bitMatrix[a][b] && a && a !== i);\n          this.nodeMatrix[i][j].down = this.nodeMatrix[a][j];\n        } else {\n          this.nodeMatrix[i][j] = null;\n        }\n      }\n    }\n    // Link header\n    this.header.right = this.nodeMatrix[0][0];\n    this.header.left = this.nodeMatrix[0][this.cols - 1];\n\n    this.nodeMatrix[0][0].left = this.header;\n    this.nodeMatrix[0][this.cols - 1].right = this.header;\n  }\n\n  cover(target) {\n    let colNode = target.column;\n\n    // Unlink target\n    colNode.left.right = colNode.right;\n    colNode.right.left = colNode.left;\n\n    // Move down and remove nodes traversing to the right\n    for (\n      let rowNode = colNode.down;\n      rowNode.rowID !== colNode.rowID;\n      rowNode = rowNode.down\n    ) {\n      for (\n        let rightNode = rowNode.right;\n        rightNode.colID !== rowNode.colID;\n        rightNode = rightNode.right\n      ) {\n        rightNode.up.down = rightNode.down;\n        rightNode.down.up = rightNode.up;\n        this.nodeMatrix[0][rightNode.colID].nodeCnt--;\n      }\n    }\n  }\n\n  uncover(target) {\n    let colNode = target.column;\n    // Move up and add nodes traversing to the left\n    for (\n      let rowNode = colNode.up;\n      rowNode.rowID !== colNode.rowID;\n      rowNode = rowNode.up\n    ) {\n      for (\n        let leftNode = rowNode.left;\n        leftNode.colID !== rowNode.colID;\n        leftNode = leftNode.left\n      ) {\n        leftNode.up.down = leftNode;\n        leftNode.down.up = leftNode;\n        this.nodeMatrix[0][leftNode.colID].nodeCnt++;\n      }\n    }\n\n    // Relink target\n    colNode.left.right = colNode;\n    colNode.right.left = colNode;\n  }\n\n  getMinColumn() {\n    let h = this.header;\n    let minCol = h.right;\n    h = h.right.right;\n    do {\n      if (h.nodeCnt < minCol.nodeCnt) minCol = h;\n      h = h.right;\n    } while (h !== this.header);\n    return minCol;\n  }\n\n  // Returns Node in row, if any\n  getNodeFromRow(row) {\n    for (let i = 0; i < this.cols; i++) {\n      if (\n        this.nodeMatrix[row][i] &&\n        this.nodeMatrix[row][i].column.left.right ===\n          this.nodeMatrix[row][i].column\n      )\n        return this.nodeMatrix[row][i];\n    }\n  }\n\n  // Covers all columns that have associated node in row\n  choose(row) {\n    let rowNode = this.getNodeFromRow(row);\n    this.cover(rowNode);\n    for (\n      let rightNode = rowNode.right;\n      rightNode.colID !== rowNode.colID;\n      rightNode = rightNode.right\n    )\n      this.cover(rightNode);\n  }\n\n  // Chose all rows in grid\n  chooseGiven(grid) {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (grid[i][j]) {\n          this.choose(81 * i + 9 * j + parseInt(grid[i][j]));\n          this.solution.push(81 * i + 9 * j + parseInt(grid[i][j]));\n        }\n      }\n    }\n  }\n\n  // Find the solution\n  search() {\n    if (this.uniqueSolutions.length > 1) return;\n    // No columns left mean we have a solution\n    if (this.header.right === this.header) {\n      this.uniqueSolutions.push(this.solution.slice());\n      return;\n    }\n\n    // Chose most constrained column\n    let column = this.getMinColumn();\n\n    // Cover collisions\n    this.cover(column);\n\n    for (\n      let rowNode = column.down;\n      rowNode.rowID !== column.rowID;\n      rowNode = rowNode.down\n    ) {\n      this.solution.push(rowNode.rowID);\n      for (\n        let rightNode = rowNode.right;\n        rightNode.colID !== rowNode.colID;\n        rightNode = rightNode.right\n      )\n        this.cover(rightNode);\n      this.search();\n      this.solution.pop();\n\n      column = rowNode.column;\n      for (\n        let leftNode = rowNode.left;\n        leftNode !== rowNode;\n        leftNode = leftNode.left\n      )\n        this.uncover(leftNode);\n    }\n    this.uncover(column);\n  }\n}\n\nlet algoX = new AlgorithmX();\n\nexport function solve(arrayToSolve) {\n  let success = false,\n    grid,\n    error;\n  if (!isClean(arrayToSolve)) {\n    return {\n      success,\n      grid,\n      error: \"Invalid puzzle. Unrecognized characters in table.\",\n    };\n  }\n  algoX.chooseGiven(arrayToSolve);\n  algoX.search();\n  if (algoX.uniqueSolutions.length > 1) {\n    error = \"Invalid puzzle. Several unique solutions.\";\n  } else if (algoX.uniqueSolutions.length === 0) {\n    error = \"Invalid puzzle. No solution exists.\";\n  } else {\n    grid = getSolutionGrid(algoX.uniqueSolutions[0]);\n    success = true;\n  }\n  algoX = new AlgorithmX();\n  return { success, grid, error };\n}\n\n// Convert rowNodes to a grid\nfunction getSolutionGrid(solution) {\n  solution.sort((a, b) => a - b);\n  let grid = make2DEmpty(9);\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      grid[i][j] = (solution[9 * i + j] - 81 * i - 9 * j).toString();\n    }\n  }\n  return grid;\n}\n\nfunction isClean(arrayToCheck) {\n  const validChars = \"123456789\";\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      if (\n        !validChars.includes(arrayToCheck[i][j]) ||\n        arrayToCheck[i][j].length > 1\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n","import React from \"react\";\n\nfunction Alert({ alertMessage, AlertType }) {\n  return (\n    <div className=\"alert alert-light\">\n      {alertMessage && (\n        <AlertType\n          style={{ fontSize: \"1.5em\", verticalAlign: \"top\", minWidth: \"5%\" }}\n        />\n      )}\n      <div className=\"alert-text\">{alertMessage}</div>\n    </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Grid from \"./Grid.js\";\nimport { solve } from \"../solve/DLX.js\";\nimport { Error, HelpOutline, Info } from \"@material-ui/icons\";\nimport Alert from \"./Alert.js\";\nimport { make2DFull } from \"../solve/utils.js\";\nimport Modal from \"react-modal\";\nimport { isMobile } from \"react-device-detect\";\n\nfunction App() {\n  const tip = isMobile\n    ? \"Tip: Press enter/return to quickly move on to the next box!\"\n    : \"Tip: Use the arrow keys to quickly navigate between boxes!\";\n  const [grid2D, setGrid2D] = useState(make2DFull(\"\"));\n  const [alertMessage, setAlertMessage] = useState(tip);\n  const [AlertType, setAlertType] = useState(HelpOutline);\n  const [conflicts, setConflicts] = useState([]);\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [focusedBox, setFocusedBox] = useState({\n    focusRow: -1,\n    focusColumn: -1,\n  });\n\n  return (\n    <div className=\"App\" id=\"root\">\n      <h1>Sudoku Solver</h1>\n      <div id=\"table-container\">\n        <Grid\n          grid2D={grid2D}\n          setGrid2D={setGrid2D}\n          focusedBox={focusedBox}\n          setFocusedBox={setFocusedBox}\n          conflicts={conflicts}\n          setConflicts={setConflicts}\n        />\n      </div>\n      <Alert alertMessage={alertMessage} AlertType={AlertType} />\n      <div className=\"button-row\">\n        <div className=\"button-cell\">\n          <button\n            type=\"button\"\n            className=\"btn btn-lg\"\n            id=\"solve\"\n            onClick={() => {\n              const { success, grid, error } = solve(grid2D);\n              if (success) {\n                setGrid2D(grid);\n              } else {\n                setAlertMessage(error);\n                setAlertType(Error);\n              }\n              setFocusedBox({\n                focusRow: -1,\n                focusColumn: -1,\n              });\n            }}\n          >\n            Solve\n          </button>\n        </div>\n        <div className=\"button-cell\">\n          <button\n            type=\"button\"\n            className=\"btn btn-lg\"\n            id=\"clear\"\n            onClick={() => {\n              let arr = make2DFull(\"\");\n              setGrid2D(arr);\n              setAlertMessage(\"\");\n              setAlertType(Error);\n              setFocusedBox({\n                focusRow: -1,\n                focusColumn: -1,\n              });\n            }}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n      <hr />\n      <footer>\n        <div className=\"alert-text\">\n          Sudoku Solver by&nbsp;\n          <a href=\"https://kevinshannon.dev/\">Kevin Shannon</a> <br />\n          <a href=\"https://github.com/kevin-shannon/sudoku\">View on Github</a>\n        </div>\n        <Info className=\"info-icon\" onClick={() => setIsOpen(true)} />\n      </footer>\n      <Modal\n        className=\"info-modal\"\n        isOpen={modalIsOpen}\n        onRequestClose={() => setIsOpen(false)}\n        contentLabel=\"Info Modal\"\n      >\n        <h3 style={{ textAlign: \"center\" }}>About Sudoku Solver</h3>\n        <p>\n          Welcome to Sudoku Solver{\" \"}\n          <span role=\"img\" aria-label=\"robot\">\n            🤖\n          </span>{\" \"}\n          A website that, as the name implies, will solve any Sudoku in just\n          milliseconds! This is achieved by using{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Knuth%27s_Algorithm_X\">\n            Knuth's Algorithm X\n          </a>{\" \"}\n          to solve a Sudoku as an{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Exact_cover\">exact cover</a>{\" \"}\n          problem. To input your puzzle you can either click around, or use the\n          arrow, tab, and enter keys. When you're done use \"solve\" or if you\n          want to start over use \"clear\".\n        </p>\n      </Modal>\n    </div>\n  );\n}\n\nModal.setAppElement(\"#root\");\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}