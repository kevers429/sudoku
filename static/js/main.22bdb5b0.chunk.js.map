{"version":3,"sources":["components/Box.js","components/Grid.js","solve/utils.js","solve/DLX.js","components/Alert.js","components/App.js","serviceWorker.js","index.js"],"names":["useFocus","htmlElRef","useRef","current","focus","Box","onKeyDown","onChange","value","setFocusedBox","inputRef","setInputFocus","useState","height","setHeight","tdRef","useEffect","clientHeight","ref","autoComplete","pattern","type","onClick","style","fontSize","handleKeys","e","currentBoxX","currentBoxY","move","x","y","preventDefault","focusRow","focusColumn","which","shiftKey","target","Grid","grid2D","setGrid2D","focusedBox","rows","i","row","j","push","key","slice","updateGrid","displayGrid","make2DFull","arr","make2DEmpty","width","Node","AlgorithmX","cols","getRight","getLeft","getUp","getDown","this","header","nodeMatrix","makeDonut","solution","uniqueSolutions","a","b","nodeCnt","bitMatrix","column","rowID","colID","left","right","up","down","colNode","rowNode","rightNode","leftNode","h","minCol","getNodeFromRow","cover","grid","choose","parseInt","length","getMinColumn","search","pop","uncover","algoX","solve","arrayToSolve","error","success","arrayToCheck","includes","isClean","chooseGiven","sort","getSolutionGrid","Alert","alertMessage","AlertType","className","verticalAlign","minWidth","Modal","setAppElement","App","tip","isMobile","setAlertMessage","HelpOutline","setAlertType","React","modalIsOpen","setIsOpen","id","Error","href","Info","isOpen","onRequestClose","contentLabel","textAlign","role","aria-label","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.22bdb5b0.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\n\nfunction Box({ focus, onKeyDown, onChange, value, setFocusedBox }) {\n  const [inputRef, setInputFocus] = useFocus();\n  const [height, setHeight] = useState(0);\n  const tdRef = useRef(null);\n\n  useEffect(() => {\n    if (focus) {\n      setInputFocus();\n    }\n  }, [focus, setInputFocus]);\n\n  useEffect(() => {\n    setHeight(tdRef.current.clientHeight);\n  }, [setHeight]);\n\n  return (\n    <td ref={tdRef}>\n      <input\n        ref={inputRef}\n        autoComplete=\"new-password\"\n        pattern=\"\\d\"\n        type=\"number\"\n        onKeyDown={onKeyDown}\n        onChange={onChange}\n        value={value}\n        onClick={setFocusedBox}\n        style={{ fontSize: height / 1.6 }}\n      />\n    </td>\n  );\n}\n\nconst useFocus = () => {\n  const htmlElRef = useRef(null);\n  const setFocus = () => {\n    htmlElRef.current && htmlElRef.current.focus();\n  };\n  return [htmlElRef, setFocus];\n};\n\nexport default Box;\n","import React from \"react\";\nimport Box from \"./Box.js\";\n\nfunction Grid({ grid2D, setGrid2D, focusedBox, setFocusedBox }) {\n  return (\n    <table>\n      <tbody>{displayGrid(focusedBox, setFocusedBox, grid2D, setGrid2D)}</tbody>\n    </table>\n  );\n}\n\nfunction displayGrid(\n  { focusRow, focusColumn },\n  setFocusedBox,\n  grid2D,\n  setGrid2D\n) {\n  let rows = [];\n  for (let i = 0; i < 9; i++) {\n    let row = [];\n    for (let j = 0; j < 9; j++) {\n      const focus = focusRow === i && focusColumn === j;\n      row.push(\n        <Box\n          key={i + \"\" + j}\n          focus={focus}\n          onKeyDown={(e) => handleKeys(e, i, j, setFocusedBox)}\n          onChange={(e) => updateGrid(e, i, j, grid2D, setGrid2D)}\n          value={grid2D[i][j]}\n          setFocusedBox={() =>\n            setFocusedBox({\n              focusRow: i,\n              focusColumn: j,\n            })\n          }\n        />\n      );\n    }\n    rows.push(<tr key={i}>{row}</tr>);\n  }\n  return rows;\n}\n\nfunction updateGrid(e, currentBoxX, currentBoxY, grid2D, setGrid2D) {\n  grid2D[currentBoxX][currentBoxY] = e.target.value;\n  setGrid2D(grid2D.slice());\n}\n\nconst handleKeys = (e, currentBoxX, currentBoxY, setFocusedBox) => {\n  const move = (x, y) => {\n    e.preventDefault();\n    setFocusedBox({\n      focusRow: currentBoxX + x,\n      focusColumn: currentBoxY + y,\n    });\n  };\n\n  if (e.which === 39) {\n    // Right Arrow\n    move(0, 1);\n  } else if (e.which === 37) {\n    // Left Arrow\n    move(0, -1);\n  } else if (e.which === 38) {\n    // Up Arrow\n    move(-1, 0);\n  } else if (e.which === 40) {\n    // Down Arrow\n    move(1, 0);\n  } else if ((e.which === 9 && !e.shiftKey) || e.which === 13) {\n    // Tab (go right)\n    if (currentBoxY === 8) {\n      move(1, -8);\n    } else {\n      move(0, 1);\n    }\n  } else if (e.which === 9 && e.shiftKey) {\n    // Shift + Tab (go left)\n    if (currentBoxY === 0) {\n      move(-1, 8);\n    } else {\n      move(0, -1);\n    }\n  } else if (\n    e.which === 96 ||\n    e.which === 46 ||\n    e.which === 48 ||\n    e.which === 69 ||\n    e.which === 107 ||\n    e.which === 109 ||\n    e.which === 110 ||\n    e.which === 187 ||\n    e.which === 189 ||\n    e.which === 190\n  ) {\n    // Block \"0\"\n    e.preventDefault();\n  } else if (e.which !== 8) {\n    // Clear input otherwise if not backspace\n    // as to guarantee change.\n    e.target.value = \"\";\n  }\n};\n\nexport default Grid;\n","export function make2DFull(value) {\n  var arr = [];\n  for (let i = 0; i < 9; i++) {\n    arr.push([]);\n    for (let j = 0; j < 9; j++) {\n      arr[i].push(value);\n    }\n  }\n  return arr;\n}\n\nexport function make2DEmpty(width) {\n  var arr = [];\n  for (var i = 0; i < width; i++) arr[i] = [];\n  return arr;\n}\n","import bitMatrix from \"./bitmatrix.json\";\nimport { make2DEmpty } from \"./utils.js\";\n\nclass Node {}\n\nclass AlgorithmX {\n  rows = 729;\n  cols = 324;\n\n  constructor() {\n    this.header = new Node();\n    this.nodeMatrix = make2DEmpty(this.rows + 1);\n    for (let i = 0; i <= this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        this.nodeMatrix[i][j] = new Node();\n      }\n    }\n    this.makeDonut();\n    this.solution = [];\n    this.uniqueSolutions = [];\n  }\n\n  getRight = (i) => (i + 1) % this.cols;\n  getLeft = (i) => (i - 1 < 0 ? this.cols - 1 : i - 1);\n  getUp = (i) => (i - 1 < 0 ? this.rows : i - 1);\n  getDown = (i) => (i + 1) % (this.rows + 1);\n\n  // Builds circular doubly linked list\n  makeDonut() {\n    let a, b;\n    // Extra row for headers\n    for (let i = 0; i <= this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (!i) this.nodeMatrix[0][j].nodeCnt = 0;\n\n        // 1 corresponds with node\n        if (bitMatrix[i][j] || !i) {\n          // Increment nodeCnt if not a header node\n          if (i) this.nodeMatrix[0][j].nodeCnt++;\n\n          this.nodeMatrix[i][j].column = this.nodeMatrix[0][j];\n          this.nodeMatrix[i][j].rowID = i;\n          this.nodeMatrix[i][j].colID = j;\n\n          // Link nodes\n          a = i;\n          b = j;\n          do {\n            b = this.getLeft(b);\n          } while (!bitMatrix[a][b] && i && b !== j);\n          this.nodeMatrix[i][j].left = this.nodeMatrix[i][b];\n\n          b = j;\n          do {\n            b = this.getRight(b);\n          } while (!bitMatrix[a][b] && i && b !== j);\n          this.nodeMatrix[i][j].right = this.nodeMatrix[i][b];\n\n          b = j;\n          do {\n            a = this.getUp(a);\n          } while (!bitMatrix[a][b] && a && a !== i);\n          this.nodeMatrix[i][j].up = this.nodeMatrix[a][j];\n\n          a = i;\n          do {\n            a = this.getDown(a);\n          } while (!bitMatrix[a][b] && a && a !== i);\n          this.nodeMatrix[i][j].down = this.nodeMatrix[a][j];\n        } else {\n          this.nodeMatrix[i][j] = null;\n        }\n      }\n    }\n    // Link header\n    this.header.right = this.nodeMatrix[0][0];\n    this.header.left = this.nodeMatrix[0][this.cols - 1];\n\n    this.nodeMatrix[0][0].left = this.header;\n    this.nodeMatrix[0][this.cols - 1].right = this.header;\n  }\n\n  cover(target) {\n    let colNode = target.column;\n\n    // Unlink target\n    colNode.left.right = colNode.right;\n    colNode.right.left = colNode.left;\n\n    // Move down and remove nodes traversing to the right\n    for (\n      let rowNode = colNode.down;\n      rowNode.rowID !== colNode.rowID;\n      rowNode = rowNode.down\n    ) {\n      for (\n        let rightNode = rowNode.right;\n        rightNode.colID !== rowNode.colID;\n        rightNode = rightNode.right\n      ) {\n        rightNode.up.down = rightNode.down;\n        rightNode.down.up = rightNode.up;\n        this.nodeMatrix[0][rightNode.colID].nodeCnt--;\n      }\n    }\n  }\n\n  uncover(target) {\n    let colNode = target.column;\n    // Move up and add nodes traversing to the left\n    for (\n      let rowNode = colNode.up;\n      rowNode.rowID !== colNode.rowID;\n      rowNode = rowNode.up\n    ) {\n      for (\n        let leftNode = rowNode.left;\n        leftNode.colID !== rowNode.colID;\n        leftNode = leftNode.left\n      ) {\n        leftNode.up.down = leftNode;\n        leftNode.down.up = leftNode;\n        this.nodeMatrix[0][leftNode.colID].nodeCnt++;\n      }\n    }\n\n    // Relink target\n    colNode.left.right = colNode;\n    colNode.right.left = colNode;\n  }\n\n  getMinColumn() {\n    let h = this.header;\n    let minCol = h.right;\n    h = h.right.right;\n    do {\n      if (h.nodeCnt < minCol.nodeCnt) minCol = h;\n      h = h.right;\n    } while (h !== this.header);\n    return minCol;\n  }\n\n  // Returns Node in row, if any\n  getNodeFromRow(row) {\n    for (let i = 0; i < this.cols; i++) {\n      if (\n        this.nodeMatrix[row][i] &&\n        this.nodeMatrix[row][i].column.left.right ===\n          this.nodeMatrix[row][i].column\n      )\n        return this.nodeMatrix[row][i];\n    }\n  }\n\n  // Covers all columns that have associated node in row\n  choose(row) {\n    let rowNode = this.getNodeFromRow(row);\n    this.cover(rowNode);\n    for (\n      let rightNode = rowNode.right;\n      rightNode.colID !== rowNode.colID;\n      rightNode = rightNode.right\n    )\n      this.cover(rightNode);\n  }\n\n  // Chose all rows in grid\n  chooseGiven(grid) {\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (grid[i][j]) {\n          this.choose(81 * i + 9 * j + parseInt(grid[i][j]));\n          this.solution.push(81 * i + 9 * j + parseInt(grid[i][j]));\n        }\n      }\n    }\n  }\n\n  // Find the solution\n  search() {\n    if (this.uniqueSolutions.length > 1) return;\n    // No columns left mean we have a solution\n    if (this.header.right === this.header) {\n      this.uniqueSolutions.push(this.solution.slice());\n      return;\n    }\n\n    // Chose most constrained column\n    let column = this.getMinColumn();\n\n    // Cover collisions\n    this.cover(column);\n\n    for (\n      let rowNode = column.down;\n      rowNode.rowID !== column.rowID;\n      rowNode = rowNode.down\n    ) {\n      this.solution.push(rowNode.rowID);\n      for (\n        let rightNode = rowNode.right;\n        rightNode.colID !== rowNode.colID;\n        rightNode = rightNode.right\n      )\n        this.cover(rightNode);\n      this.search();\n      this.solution.pop();\n\n      column = rowNode.column;\n      for (\n        let leftNode = rowNode.left;\n        leftNode !== rowNode;\n        leftNode = leftNode.left\n      )\n        this.uncover(leftNode);\n    }\n    this.uncover(column);\n  }\n}\n\nlet algoX = new AlgorithmX();\n\nexport function solve(arrayToSolve) {\n  let success = false,\n    grid,\n    error;\n  if (!isClean(arrayToSolve)) {\n    return {\n      success,\n      grid,\n      error: \"Invalid puzzle. Unrecognized characters in table.\",\n    };\n  }\n  algoX.chooseGiven(arrayToSolve);\n  algoX.search();\n  if (algoX.uniqueSolutions.length > 1) {\n    error = \"Invalid puzzle. Several unique solutions.\";\n  } else if (algoX.uniqueSolutions.length === 0) {\n    error = \"Invalid puzzle. No solution exists.\";\n  } else {\n    grid = getSolutionGrid(algoX.uniqueSolutions[0]);\n    success = true;\n  }\n  algoX = new AlgorithmX();\n  return { success, grid, error };\n}\n\n// Convert rowNodes to a grid\nfunction getSolutionGrid(solution) {\n  solution.sort((a, b) => a - b);\n  let grid = make2DEmpty(9);\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      grid[i][j] = solution[9 * i + j] - 81 * i - 9 * j;\n    }\n  }\n  return grid;\n}\n\nfunction isClean(arrayToCheck) {\n  const validChars = \"123456789\";\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      if (\n        !validChars.includes(arrayToCheck[i][j]) ||\n        arrayToCheck[i][j].length > 1\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n","import React from \"react\";\n\nfunction Alert({ alertMessage, AlertType }) {\n  return (\n    <div className=\"alert alert-light\">\n      {alertMessage && (\n        <AlertType\n          style={{ fontSize: \"1.5em\", verticalAlign: \"top\", minWidth: \"5%\" }}\n        />\n      )}\n      <div className=\"alert-text\">{alertMessage}</div>\n    </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Grid from \"./Grid.js\";\nimport { solve } from \"../solve/DLX.js\";\nimport { Error, HelpOutline, Info } from \"@material-ui/icons\";\nimport Alert from \"./Alert.js\";\nimport { make2DFull } from \"../solve/utils.js\";\nimport Modal from \"react-modal\";\nimport { isMobile } from \"react-device-detect\";\n\nfunction App() {\n  const tip = isMobile\n    ? \"Tip: Press enter/return to quickly move on to the next box!\"\n    : \"Tip: Use the arrow keys to quickly navigate between boxes!\";\n  const [grid2D, setGrid2D] = useState(make2DFull(\"\"));\n  const [alertMessage, setAlertMessage] = useState(tip);\n  const [AlertType, setAlertType] = useState(HelpOutline);\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [focusedBox, setFocusedBox] = useState({\n    focusRow: -1,\n    focusColumn: -1,\n  });\n\n  return (\n    <div className=\"App\" id=\"root\">\n      <h1>Sudoku Solver</h1>\n      <div id=\"table-container\">\n        <Grid\n          grid2D={grid2D}\n          setGrid2D={setGrid2D}\n          focusedBox={focusedBox}\n          setFocusedBox={setFocusedBox}\n        />\n      </div>\n      <Alert alertMessage={alertMessage} AlertType={AlertType} />\n      <div className=\"button-row\">\n        <div className=\"button-cell\">\n          <button\n            type=\"button\"\n            className=\"btn btn-lg\"\n            id=\"solve\"\n            onClick={() => {\n              const { success, grid, error } = solve(grid2D);\n              if (success) {\n                setGrid2D(grid);\n              } else {\n                setAlertMessage(error);\n                setAlertType(Error);\n              }\n              setFocusedBox({\n                focusRow: -1,\n                focusColumn: -1,\n              });\n            }}\n          >\n            Solve\n          </button>\n        </div>\n        <div className=\"button-cell\">\n          <button\n            type=\"button\"\n            className=\"btn btn-lg\"\n            id=\"clear\"\n            onClick={() => {\n              let arr = make2DFull(\"\");\n              setGrid2D(arr);\n              setAlertMessage(\"\");\n              setAlertType(Error);\n              setFocusedBox({\n                focusRow: -1,\n                focusColumn: -1,\n              });\n            }}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n      <hr />\n      <footer>\n        <div className=\"alert-text\">\n          Sudoku Solver by&nbsp;\n          <a href=\"https://kevinshannon.dev/\">Kevin Shannon</a> <br />\n          <a href=\"https://github.com/kevin-shannon/sudoku\">View on Github</a>\n        </div>\n        <Info className=\"info-icon\" onClick={() => setIsOpen(true)} />\n      </footer>\n      <Modal\n        className=\"info-modal\"\n        isOpen={modalIsOpen}\n        onRequestClose={() => setIsOpen(false)}\n        contentLabel=\"Info Modal\"\n      >\n        <h3 style={{ textAlign: \"center\" }}>About Sudoku Solver</h3>\n        <p>\n          Welcome to Sudoku Solver{\" \"}\n          <span role=\"img\" aria-label=\"robot\">\n            🤖\n          </span>{\" \"}\n          A website that, as the name implies, will solve any Sudoku in just\n          milliseconds! This is achieved by using{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Knuth%27s_Algorithm_X\">\n            Knuth's Algorithm X\n          </a>{\" \"}\n          to solve a Sudoku as an{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Exact_cover\">exact cover</a>{\" \"}\n          problem. To input your puzzle you can either click around, or use the\n          arrow, tab, and enter keys. When you're done use \"solve\" or if you\n          want to start over use \"clear\".\n        </p>\n      </Modal>\n    </div>\n  );\n}\n\nModal.setAppElement(\"#root\");\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}